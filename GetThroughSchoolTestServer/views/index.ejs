<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Switch Manager</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
            background-color: #f4f4f9;
            color: #333;
        }

        h1 {
            text-align: center;
            color: #4CAF50;
        }

        label {
            font-weight: bold;
            margin-bottom: 10px;
            display: block;
        }

        #userList {
            width: 100%;
            max-width: 300px;
            padding: 10px;
            margin: 10px auto;
            display: block;
            border: 1px solid #ccc;
            border-radius: 5px;
            font-size: 16px;
        }

        #switchForm {
            display: none;
            margin-top: 20px;
            background: #fff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
            max-width: 600px;
            margin: 20px auto;
        }

        .switch-container {
            display: flex;
            align-items: center;
            justify-content: space-between;
            margin-bottom: 10px;
            padding: 10px;
            background: #f9f9f9;
            border: 1px solid #ddd;
            border-radius: 5px;
        }

        .switch-container label {
            margin-right: 10px;
            flex: 1;
        }

        .switch-container input[type="checkbox"] {
            transform: scale(1.2);
        }

        button[type="submit"] {
            display: block;
            width: 100%;
            max-width: 200px;
            margin: 20px auto;
            padding: 10px 20px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        button[type="submit"]:hover {
            background-color: #45a049;
        }

        #selectedUser {
            color: #4CAF50;
            font-weight: bold;
        }

        .error {
            color: red;
            font-weight: bold;
            text-align: center;
        }
    </style>
</head>
<body>
    <h1>Switch Manager</h1>
    <div style="text-align: center; margin-bottom: 20px;">
        <label for="userList">Select a User:</label>
        <select id="userList">
            <option value="">-- Select a User --</option>
        </select>
    </div>

    <form id="switchForm">
        <h2>Switches for <span id="selectedUser"></span></h2>
        <div id="switches"></div>
        <button type="submit">Save Changes</button>
    </form>

    <script>
        const ws = new WebSocket("ws://172.16.3.197:3000");

        ws.onopen = () => {
            console.log("Connected to WebSocket server.");
        };

        ws.onmessage = (event) => {
            const message = JSON.parse(event.data);
            console.log("Received message from server:", message);

            if (message.type === "update") {
                const gameData = message.data;
                const serverUsername = message.username; // OAuth username sent by the server
                const selectedUser = document.getElementById("userList").value;

                if (serverUsername && selectedUser === serverUsername) {
                    console.log("Updating switches for user:", serverUsername);

                    const switchesDiv = document.getElementById("switches");
                    switchesDiv.innerHTML = ""; // Clear existing switches

                    Object.keys(gameData.switches).forEach((switchId) => {
                        const switchState = gameData.switches[switchId];
                        const switchName = gameData.switchNames[switchId] || `Switch ${switchId}`;

                        console.log(`Rendering switch: ${switchName} (ID: ${switchId}, State: ${switchState})`);

                        const div = document.createElement("div");
                        div.className = "switch-container";

                        const label = document.createElement("label");
                        label.textContent = switchName;
                        label.setAttribute("for", `switch-${switchId}`);

                        const checkbox = document.createElement("input");
                        checkbox.type = "checkbox";
                        checkbox.id = `switch-${switchId}`;
                        checkbox.checked = switchState;

                        div.appendChild(label);
                        div.appendChild(checkbox);
                        switchesDiv.appendChild(div);
                    });

                    document.getElementById("switchForm").style.display = "block";
                    document.getElementById("selectedUser").textContent = serverUsername;
                } else {
                    console.log(`Data received for user ${serverUsername}, but selected user is ${selectedUser}.`);
                }
            }
        };

        fetch("/logged-in-users")
            .then(response => response.json())
            .then(data => {
                console.log("Logged-in users:", data.users);

                const userList = document.getElementById("userList");
                userList.innerHTML = '<option value="">-- Select a User --</option>'; // Reset dropdown

                data.users.forEach(user => {
                    const option = document.createElement("option");
                    option.value = user.username; // Use OAuth username as the value
                    option.textContent = user.username; // Display the OAuth username
                    userList.appendChild(option);
                });

                userList.addEventListener("change", () => {
                    const selectedUser = userList.value;
                    console.log("User selected:", selectedUser);

                    if (selectedUser) {
                        ws.send(JSON.stringify({ type: "requestGameData", username: selectedUser }));
                    } else {
                        document.getElementById("switchForm").style.display = "none";
                    }
                });
            })
            .catch(error => console.error("Error fetching logged-in users:", error));

        fetch("/store-username", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ username: document.getElementById("userList").value }) // Send the selected username
        })
            .then(() => console.log("Webpage username sent to server."))
            .catch(error => console.error("Error sending webpage username to server:", error));

        document.getElementById("switchForm").addEventListener("submit", (event) => {
            event.preventDefault();

            const switches = {};
            const checkboxes = document.querySelectorAll("#switches input[type='checkbox']");

            checkboxes.forEach((checkbox) => {
                const switchId = checkbox.id.split("-")[1];
                switches[switchId] = checkbox.checked;
            });

            const selectedUser = document.getElementById("userList").value;

            console.log("Submitting updated switches for user:", selectedUser, switches);

            ws.send(JSON.stringify({
                type: "updateSwitches",
                data: { username: selectedUser, switches }
            }));
        });
    </script>
</body>
</html>